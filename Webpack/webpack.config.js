// Для того чтобы достучаться до плагина
const HtmlWebpackPlugin = require('html-webpack-plugin');

// У самого Webpack уже есть встроенные плагины, их неплохо тоже импортировать
const webpack = require('webpack');

// Импортируем модуль для работ с путями
const path = require('path');

module.exports = {

    // Указываем входную точку
    entry: './src/index.js',

    // Указываем точку выхода
    output: {

        // Тут мы указываем полный путь к директории, где будет храниться конечный файл
        path: path.resolve(__dirname, 'dist'),

	    // Указываем имя этого файла
        filename: 'my-first-webpack.bundle.js',
    },

    // Указываем тут, что будем использовать спец. модуль для определенных файлов (лоадер)
    module: {

	    // Указываем правила для данных модулей
	    rules: [

		    // Указываем правило для каждого лоадера
		    { test: /\.txt$/, use: 'raw-loader' },                      // Импорт txt файлов
            { test: /\.css$/, use: [ 'style-loader', 'css-loader' ] },  // Импорт стилей и их загрузка
            
            // Преобразование JavaScript следующего поколения в современный JavaScript с помощью Babel 
            { test: /\.(js)$/, use: 'babel-loader' },
	    ],
    },

     // Указываем новые плагины для обработки файлов
    plugins: [

	    // Указываем что будем обрабатывать HTML с помощью плагина
        new HtmlWebpackPlugin(),
	],

    /** Всего у Webpack существуют два режима:
     *      Режим development. Данный режим рассчитан на разработку, он не сильно сжимает бандл (точку выхода,
     *          файл который получится в конце), а также может привязывать карты исходников и кучу других мелких фич
     *      Режим production. Режим, который будет сжимать ваш бандл, покуда сможет и делать совершенно
     *          нечитабельный (такой, что и обфускатор не потребуется), но оптимизированный код. */
    mode: 'development',
};