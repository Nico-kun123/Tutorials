// –ü–†–û–ß–ò–¢–ê–¢–¨: https://learn.javascript.ru/map-set
/**
 * Map ‚Äì —ç—Ç–æ –∫–æ–ª–ª–µ–∫—Ü–∏—è –∫–ª—é—á/–∑–Ω–∞—á–µ–Ω–∏–µ, –∫–∞–∫ –∏ Object. –ù–æ –æ—Å–Ω–æ–≤–Ω–æ–µ –æ—Ç–ª–∏—á–∏–µ –≤ —Ç–æ–º, —á—Ç–æ Map
 *      –ø–æ–∑–≤–æ–ª—è–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –∫–ª—é—á–∏ –ª—é–±–æ–≥–æ —Ç–∏–ø–∞.
 */

let map = new Map();            // —Å–æ–∑–¥–∞—ë—Ç –∫–æ–ª–ª–µ–∫—Ü–∏—é
console.log(typeof map, "\n");  // Object

// map.set(key, value) ‚Äì –∑–∞–ø–∏—Å—ã–≤–∞–µ—Ç –ø–æ –∫–ª—é—á—É key –∑–Ω–∞—á–µ–Ω–∏–µ value
map.set("1", "str1");    // —Å—Ç—Ä–æ–∫–∞ –≤ –∫–∞—á–µ—Å—Ç–≤–µ –∫–ª—é—á–∞
map.set(1, "num1");      // —Ü–∏—Ñ—Ä–∞ –∫–∞–∫ –∫–ª—é—á
map.set(true, "bool1");  // –±—É–ª–µ–≤–æ –∑–Ω–∞—á–µ–Ω–∏–µ –∫–∞–∫ –∫–ª—é—á

// –í—ã–≤–æ–¥ –∫–æ–ª–ª–µ–∫—Ü–∏–∏ –≤ –∫–æ–Ω—Å–æ–ª—å
console.log(map);       // {size: 3, 1 => str1, 1 => num1, true => bool1}

// map.get(key) ‚Äì –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∑–Ω–∞—á–µ–Ω–∏–µ –ø–æ –∫–ª—é—á—É –∏–ª–∏ undefined, –µ—Å–ª–∏ –∫–ª—é—á key –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç
console.log(map.get(1));      // "num1"
console.log(map.get("1"));    // "str1"

// map.has(key) ‚Äì –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç true, –µ—Å–ª–∏ –∫–ª—é—á key –ø—Ä–∏—Å—É—Ç—Å—Ç–≤—É–µ—Ç –≤ –∫–æ–ª–ª–µ–∫—Ü–∏–∏, –∏–Ω–∞—á–µ false
console.log(map.has(1));    // true
console.log(map.has(2));    // false

// map.delete(key) ‚Äì —É–¥–∞–ª—è–µ—Ç —ç–ª–µ–º–µ–Ω—Ç –ø–æ –∫–ª—é—á—É key
map.delete(true);
console.log(map);   // {size: 2, 1 => str1, 1 => num1}

// map.size ‚Äì –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Ç–µ–∫—É—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —ç–ª–µ–º–µ–Ω—Ç–æ–≤
console.log(map.size);  // 2

// map.clear() ‚Äì –æ—á–∏—â–∞–µ—Ç –∫–æ–ª–ª–µ–∫—Ü–∏—é –æ—Ç –≤—Å–µ—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤
map.clear();
console.log(map);   // {size: 0}
//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
let recipeMap = new Map([
    ["–æ–≥—É—Ä–µ—Ü", 500],
    ["–ø–æ–º–∏–¥–æ—Ä", 350],
    ["–ª—É–∫",    50]
]);

// –ø–µ—Ä–µ–±–æ—Ä –ø–æ –∫–ª—é—á–∞–º (–æ–≤–æ—â–∏)
for (let vegetable of recipeMap.keys()) {
    console.log(vegetable);                 // –æ–≥—É—Ä–µ—Ü, –ø–æ–º–∏–¥–æ—Ä, –ª—É–∫
};
  
  // –ø–µ—Ä–µ–±–æ—Ä –ø–æ –∑–Ω–∞—á–µ–Ω–∏—è–º (—á–∏—Å–ª–∞)
for (let amount of recipeMap.values()) {
    console.log(amount);                    // 500, 350, 50
};
  
  // –ø–µ—Ä–µ–±–æ—Ä –ø–æ —ç–ª–µ–º–µ–Ω—Ç–∞–º –≤ —Ñ–æ—Ä–º–∞—Ç–µ [–∫–ª—é—á, –∑–Ω–∞—á–µ–Ω–∏–µ]
for (let entry of recipeMap) {              // —Ç–æ –∂–µ —Å–∞–º–æ–µ, —á—Ç–æ –∏ recipeMap.entries()
    console.log(entry);                     // –æ–≥—É—Ä–µ—Ü, 500 (–∏ —Ç–∞–∫ –¥–∞–ª–µ–µ)
};
//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
// –ü–æ–ª—É—á–∏—Ç—å Map –∏–∑ Object

let obj = {
    name: "John",
    age: 30
};

let obj1 = Object.entries(obj);
console.log( obj1[0], obj1[1] );    // ['name', 'John'] ['age', 30]

// Object.entries –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –º–∞—Å—Å–∏–≤ –ø–∞—Ä –∫–ª—é—á-–∑–Ω–∞—á–µ–Ω–∏–µ: [ ["name","John"], ["age", 30] ].
// –≠—Ç–æ –∏–º–µ–Ω–Ω–æ —Ç–æ, —á—Ç–æ –Ω—É–∂–Ω–æ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è Map
map = new Map( Object.entries(obj) );
console.log( map.get('name') );         // John
//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
// –ü–æ–ª—É—á–∏—Ç—å Object –∏–∑ Map

map = new Map();
map.set('banana', 1);
map.set('orange', 2);
map.set('meat', 4);

// map.entries() –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∏—Ç–µ—Ä–∏—Ä—É–µ–º—ã–π –æ–±—ä–µ–∫—Ç –ø–∞—Ä –∫–ª—é—á/–∑–Ω–∞—á–µ–Ω–∏–µ, –∫–∞–∫ —Ä–∞–∑ –≤
//  –Ω—É–∂–Ω–æ–º —Ñ–æ—Ä–º–∞—Ç–µ –¥–ª—è Object.fromEntries
obj = Object.fromEntries(map); // —Å–æ–∑–¥–∞—ë–º –æ–±—ã—á–Ω—ã–π –æ–±—ä–µ–∫—Ç (*)

console.log(obj);           // {banana: 1, orange: 2, meat: 4}
console.log(obj.orange);    // 2
//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
// –û–±—ä–µ–∫—Ç Set ‚Äì —ç—Ç–æ –æ—Å–æ–±—ã–π –≤–∏–¥ –∫–æ–ª–ª–µ–∫—Ü–∏–∏: ¬´–º–Ω–æ–∂–µ—Å—Ç–≤–æ¬ª –∑–Ω–∞—á–µ–Ω–∏–π (–±–µ–∑ –∫–ª—é—á–µ–π), –≥–¥–µ
//  –∫–∞–∂–¥–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –º–æ–∂–µ—Ç –ø–æ—è–≤–ª—è—Ç—å—Å—è —Ç–æ–ª—å–∫–æ –æ–¥–∏–Ω —Ä–∞–∑.

let set = new Set();    // —Å–æ–∑–¥–∞—ë—Ç Set

let john = { name: "John" };
let pete = { name: "Pete" };
let mary = { name: "Mary" };
let bob = {};

// set.add(value) ‚Äì –¥–æ–±–∞–≤–ª—è–µ—Ç –∑–Ω–∞—á–µ–Ω–∏–µ (–µ—Å–ª–∏ –æ–Ω–æ —É–∂–µ –µ—Å—Ç—å, —Ç–æ –Ω–∏—á–µ–≥–æ –Ω–µ –¥–µ–ª–∞–µ—Ç), –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Ç–æ—Ç –∂–µ –æ–±—ä–µ–∫—Ç set
set.add(john);
set.add(pete);
set.add(mary);
set.add(john);
set.add(mary);

console.log(set); // {size: 3, {name: 'John'}, {name: 'Pete'}, {name: 'Mary'}}

// set.has(value) ‚Äì –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç true, –µ—Å–ª–∏ –∑–Ω–∞—á–µ–Ω–∏–µ –ø—Ä–∏—Å—É—Ç—Å—Ç–≤—É–µ—Ç –≤ –º–Ω–æ–∂–µ—Å—Ç–≤–µ, –∏–Ω–∞—á–µ false
console.log( set.has(john) );   // true
console.log( set.has(bob) );  // false

// set.size ‚Äì –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –≤ –º–Ω–æ–∂–µ—Å—Ç–≤–µ.
console.log(set.size);      // 3

// –ü–µ—Ä–µ–±–æ—Ä
for (let user of set) {
    console.log(user.name); // John (–ø–æ—Ç–æ–º Pete –∏ Mary)
};

// set.delete(value) ‚Äì —É–¥–∞–ª—è–µ—Ç –∑–Ω–∞—á–µ–Ω–∏–µ, –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç true, –µ—Å–ª–∏ value –±—ã–ª–æ –≤ –º–Ω–æ–∂–µ—Å—Ç–≤–µ –Ω–∞
//  –º–æ–º–µ–Ω—Ç –≤—ã–∑–æ–≤–∞, –∏–Ω–∞—á–µ false.
console.log (set.delete(john)); // true
console.log (set.delete(bob));  // false

// set.clear() ‚Äì —É–¥–∞–ª—è–µ—Ç –≤—Å–µ –∏–º–µ—é—â–∏–µ—Å—è –∑–Ω–∞—á–µ–Ω–∏—è.
set.clear();
console.log(set);   // {size: 0}
//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
// –ü–†–û–ß–ò–¢–ê–¢–¨: https://learn.javascript.ru/weakmap-weakset

// WeakMap ‚Äì –ø—Ä–∏–Ω—Ü–∏–ø–∏–∞–ª—å–Ω–æ –¥—Ä—É–≥–∞—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ –≤ —ç—Ç–æ–º –∞—Å–ø–µ–∫—Ç–µ.
// –û–Ω–∞ –Ω–µ –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–∞–µ—Ç —É–¥–∞–ª–µ–Ω–∏–µ –æ–±—ä–µ–∫—Ç–æ–≤ —Å–±–æ—Ä—â–∏–∫–æ–º –º—É—Å–æ—Ä–∞, –∫–æ–≥–¥–∞ —ç—Ç–∏ –æ–±—ä–µ–∫—Ç—ã –≤—ã—Å—Ç—É–ø–∞—é—Ç –≤ –∫–∞—á–µ—Å—Ç–≤–µ –∫–ª—é—á–µ–π.

let weakMap = new WeakMap();
obj = {};

weakMap.set(obj, "ok"); // —Ä–∞–±–æ—Ç–∞–µ—Ç (–æ–±—ä–µ–∫—Ç –≤ –∫–∞—á–µ—Å—Ç–≤–µ –∫–ª—é—á–∞)
// –µ—Å–ª–∏ obj –±—É–¥–µ—Ç —É–¥–∞–ª—ë–Ω, "ok" –±—É–¥–µ—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —É–¥–∞–ª—ë–Ω —Ç–æ–∂–µ

try {
    // –Ω–µ–ª—å–∑—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Å—Ç—Ä–æ–∫—É –≤ –∫–∞—á–µ—Å—Ç–≤–µ –∫–ª—é—á–∞
    weakMap.set("test", "Whoops"); // –û—à–∏–±–∫–∞, –ø–æ—Ç–æ–º—É —á—Ç–æ "test" –Ω–µ –æ–±—ä–µ–∫—Ç
} catch (error) {
    console.log("–£ weakMap –Ω–µ–ª—å–∑—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Å—Ç—Ä–æ–∫—É –≤ –∫–∞—á–µ—Å—Ç–≤–µ –∫–ª—é—á–∞!");
};

/**
 * WeakMap –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç –ø–µ—Ä–µ–±–æ—Ä –∏ –º–µ—Ç–æ–¥—ã keys(), values(), entries(), —Ç–∞–∫ —á—Ç–æ –Ω–µ—Ç
 *  —Å–ø–æ—Å–æ–±–∞ –≤–∑—è—Ç—å –≤—Å–µ –∫–ª—é—á–∏ –∏–ª–∏ –∑–Ω–∞—á–µ–Ω–∏—è –∏–∑ –Ω–µ—ë.
 * 
 * –í WeakMap –ø—Ä–∏—Å—É—Ç—Å—Ç–≤—É—é—Ç —Ç–æ–ª—å–∫–æ —Å–ª–µ–¥—É—é—â–∏–µ –º–µ—Ç–æ–¥—ã:
 *      - weakMap.get(key)
 *      - weakMap.set(key, value)
 *      - weakMap.delete(key)
 *      - weakMap.has(key)
 */
//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
// –ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ –¥–ª—è –∫–µ—à–∏—Ä–æ–≤–∞–Ω–∏—è

// üìÅ cache.js
let cache = new WeakMap();

// –≤—ã—á–∏—Å–ª—è–µ–º –∏ –∑–∞–ø–æ–º–∏–Ω–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
function process(obj) {
  if (!cache.has(obj)) {
    let result = /* –≤—ã—á–∏—Å–ª—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç –¥–ª—è –æ–±—ä–µ–∫—Ç–∞ */ obj;

    cache.set(obj, result);
  }

  return cache.get(obj);
}

// üìÅ main.js
john = { name: "John" };

let result1 = process(john);
console.log(result1);
let result2 = process(john);
console.log(result2);

// ...–ø–æ–∑–∂–µ, –∫–æ–≥–¥–∞ –æ–±—ä–µ–∫—Ç –±–æ–ª—å—à–µ –Ω–µ –Ω—É–∂–µ–Ω:
obj = null;

// –ù–µ—Ç –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –ø–æ–ª—É—á–∏—Ç—å cache.size, —Ç–∞–∫ –∫–∞–∫ —ç—Ç–æ WeakMap,
// –Ω–æ –æ–Ω —Ä–∞–≤–µ–Ω 0 –∏–ª–∏ —Å–∫–æ—Ä–æ –±—É–¥–µ—Ç —Ä–∞–≤–µ–Ω 0
// –ö–æ–≥–¥–∞ —Å–±–æ—Ä—â–∏–∫ –º—É—Å–æ—Ä–∞ —É–¥–∞–ª—è–µ—Ç obj, —Å–≤—è–∑–∞–Ω–Ω—ã–µ —Å –Ω–∏–º –¥–∞–Ω–Ω—ã–µ –∏–∑ –∫–µ—à–∞ —Ç–æ–∂–µ —É–¥–∞–ª—è—é—Ç—Å—è